{"version":3,"sources":["webpack:///./src/controllers/control.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACG;AACG;AACG;AACL;AAC9C;AAC0D;AAC1D,mBAAmB,wDAAU;AAC7B,kBAAkB,uDAAQ;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uCAAuC,yDAAU;AACjD;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,mCAAmC,yDAAU;AAC7C;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA,qBAAqB,mEAAY;AACjC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,4DAAY;AACtC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6DAAQ;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"js/app.ef0b560c9b56a0528422.hot-update.js","sourcesContent":["import indexTPL from '../views/index.art';\r\nimport sigininTPL from '../views/signin.art';\r\nimport usersTPL from '../views/user-signup.art';\r\nimport usersListTPL from '../views/users-list.art';\r\nimport warningTPL from '../views/warning.art';\r\n//import successTPL from '../views/success.art';\r\nimport usersPageTPL from '../views/users-paginations.art';\r\nconst htmlSignin = sigininTPL();\r\nconst htmlIndex = indexTPL();\r\n\r\n//--------公共参数------\r\nconst pageSize = 10;\r\nlet dataList = [];\r\nlet currentPage = 1;\r\nlet totalPage = 0;\r\n\r\n//---------功能函数板块----------\r\nconst _handleSubmit = (router) => {\r\n    return (e) => {\r\n        e.preventDefault();\r\n        router.go('/index');\r\n    }\r\n}\r\nconst _signup = () => {\r\n    //提交表单\r\n    const data = $('#users-form').serialize().toString();\r\n    $.ajax({\r\n        url: '/api/users',\r\n        type: 'post',\r\n        data,\r\n        success: function (res) {\r\n            if (res.Code == 20000) {\r\n                //添加数据后渲染 方式一\r\n                /* _loadData().then((res) => {\r\n                     dataList = res;\r\n                     // _list(1);\r\n                     // _pagination(res);\r\n                 });*/\r\n                // 方式二\r\n                _loadData();\r\n                _list(1);\r\n                _pagination(dataList);\r\n                _setPageActive(1);\r\n            } else {\r\n                $('#warning-tip').html(warningTPL({\r\n                    msg: res.msg\r\n                }))\r\n            }\r\n        },\r\n        error: function (err) {\r\n            $('#warning-tip').html(warningTPL({\r\n                msg: \"用户注册失败！\"\r\n            }))\r\n            console.log(err);\r\n        }\r\n    })\r\n    //调用btn_close按钮上的click事件\r\n    $('#users-close').click();\r\n}\r\n\r\nconst _pagination = (data) => {\r\n    const total = data.length;\r\n    var pageCount = Math.ceil(total / pageSize);\r\n    totalPage = pageCount;\r\n    var pageArray = new Array();\r\n    for (let i = 0; i < pageCount; i++) {\r\n        pageArray[i] = i + 1;\r\n    }\r\n    const htmlPage = usersPageTPL({\r\n        pageArray\r\n    });\r\n    $('#users-page').html(htmlPage);\r\n}\r\n\r\n// 为翻页按钮绑定事件\r\nconst _pageBtns = () => {\r\n    $('#users-page').on('click', '#users-page-list li:not(:first-child,:last-child)', function () {\r\n        let pageNo = $(this).index();\r\n        currentPage = pageNo;\r\n        _setPageActive(pageNo);\r\n        _list(pageNo);\r\n    })\r\n    $('#users-page').on('click', '#users-page-list li:first-child', function () {\r\n        currentPage = currentPage == 1 ? 1 : currentPage - 1;\r\n        _setPageActive(currentPage);\r\n        _list(currentPage);\r\n    })\r\n    $('#users-page').on('click', '#users-page-list li:last-child', function () {\r\n        currentPage = currentPage == totalPage ? totalPage : currentPage + 1;\r\n        _setPageActive(currentPage);\r\n        _list(currentPage);\r\n    })\r\n}\r\n\r\n//翻页按钮高亮显示\r\nconst _setPageActive = (index) => {\r\n    $('#users-page #users-page-list li')\r\n        .eq(index)\r\n        .addClass('active')\r\n        .siblings()\r\n        .removeClass('active');\r\n}\r\n\r\nconst _list = (pageNo) => {\r\n    $('#users-list').html(usersListTPL({\r\n        data: dataList.slice((pageNo - 1) * pageSize, pageNo * pageSize)\r\n    }));\r\n}\r\n\r\nconst _remove = () => {\r\n    $('#users-list').on('click', '.remove-user', function () {\r\n        //console.log($(this).attr('data-id'));\r\n        let _id = $(this).data('id');\r\n        $.ajax({\r\n            url: \"/api/users\",\r\n            type: \"delete\",\r\n            data: {\r\n                id: _id\r\n            },\r\n            success: () => {\r\n                _loadData();\r\n                _pagination(dataList);\r\n                if (totalPage) {\r\n                    if (currentPage > totalPage) {\r\n                        _list(currentPage - 1);\r\n                        _setPageActive(currentPage - 1);\r\n                    } else {\r\n                        _list(currentPage);\r\n                        _setPageActive(currentPage);\r\n                    }\r\n                }\r\n            },\r\n            error: (err) => {\r\n                console.log(err);\r\n            }\r\n        })\r\n    })\r\n}\r\n// 注意：jquery 的ajax返回的本身就是一个promise对象\r\n//请求异步处理方式一：\r\n// const _loadData = () => {\r\n//     return new Promise((resolve, reject) => {\r\n//         $.ajax({\r\n//             url: '/api/users/list',\r\n//             type: 'get',\r\n//             success: (res) => {\r\n//                 let data = res.data;\r\n//                 resolve(data);\r\n//             },\r\n//             error: (err) => {\r\n//                 console.log(err);\r\n//                 reject(err);\r\n//             }\r\n//         })\r\n//     })\r\n// }\r\n//请求异步处理方式二\r\nconst _loadData = () => {\r\n    $.ajax({\r\n        url: '/api/users',\r\n        type: 'get',\r\n        async: false, //异步变同步\r\n        success: (res) => {\r\n            let data = res.data;\r\n            dataList = data;\r\n        },\r\n        error: (err) => {\r\n            console.log(err);\r\n        }\r\n    })\r\n}\r\n// -------router板块------\r\n//登录页\r\nconst signin = (router) => {\r\n    return (req, res, next) => {\r\n        res.render(htmlSignin);\r\n        $('#signin').on('submit', _handleSubmit(router));\r\n    }\r\n}\r\n//注册页\r\nconst signup = () => {\r\n\r\n}\r\n//index页\r\nconst index = (router) => {\r\n    return (req, res, next) => {\r\n        res.render(htmlIndex);\r\n        //window resize,让页面撑满整个页面\r\n        $(window, '.wrapper').resize();\r\n        //填充用户列表\r\n        $('#content').html(usersTPL());\r\n        // 渲染list方式一\r\n        /*_loadData().then((res) => {\r\n            dataList = res;\r\n            _list(1);\r\n            _pagination(res);\r\n        });*/\r\n        //方式二\r\n        _loadData();\r\n        _list(1);\r\n        _pagination(dataList);\r\n        _pageBtns();\r\n        _setPageActive(1);\r\n        _remove();\r\n        //点击保存提交表单\r\n        $('#users-save').on('click', _signup);\r\n    }\r\n}\r\n\r\nexport {\r\n    signin,\r\n    index\r\n}"],"sourceRoot":""}